Refinery::Videos.configure do |config|
    #Configures the maximum allowed upload size (in bytes) for an video file
    #config.max_file_size = <%= Refinery::Videos.max_file_size %>

    # Configure how many videos per page should be displayed in the list of images in the admin area
    #config.pages_per_admin_index =  <%= Refinery::Videos.pages_per_admin_index %>

    # Configure white-listed mime types for validation
    #config.whitelisted_mime_types = <%= Refinery::Videos.whitelisted_mime_types %>

    # Configure skin. Put css class name to activate skin. For YouTube like skin put tubecss and add css with images to assets path.
    # config.skin_css_class = <%= Refinery::Videos.skin_css_class %>

    # Configure Dragonfly
    config.dragonfly_name = :refinery_videos
    # config.dragonfly_verify_urls = <%= Refinery::Videos.dragonfly_verify_urls %>
    # config.dragonfly_secret = <%= Refinery::Videos.dragonfly_secret.inspect %>
    # config.dragonfly_url_host = <%= Refinery::Videos.dragonfly_url_host.inspect %>
    # config.dragonfly_datastore_root_path = <%= Refinery::Videos.dragonfly_datastore_root_path.inspect %>
    # config.dragonfly_url_format = <%= Refinery::Videos.dragonfly_url_format.inspect %>

    # Configure Dragonfly custom storage backend
    # The custom_backend setting by default defers to the core setting for this but can be set just for videos.
    # config.custom_backend_class = <%= Refinery::Videos.dragonfly_custom_backend_class.inspect %>
    # config.custom_backend_opts = <%= Refinery::Videos.dragonfly_custom_backend_opts.inspect %>

    # Configure S3 (you can also use ENV for this)
    # The s3_backend setting by default defers to the core setting for this but can be set just for videos.
    # config.s3_backend = Refinery::Core.s3_backend
    # config.s3_bucket_name = ENV['S3_BUCKET']
    # config.s3_access_key_id = ENV['S3_KEY']
    # config.s3_secret_access_key = ENV['S3_SECRET']
    # config.s3_region = ENV['S3_REGION']
end
